{"version":3,"sources":["components/SiteHeader/logo.svg","components/SiteBottom/foot-logo.svg","components/Comment/thumb.svg","pages/song/components/Player/logo.svg","components/SiteHeader/index.js","components/SiteHeader/site-header.tsx","components/IndexTab/index.js","components/IndexTab/index-tab.tsx","pages/index/index.tsx","components/SiteBottom/index.js","components/SiteBottom/site-bottom.tsx","components/SectionTitle/index.js","components/SectionTitle/section-title.tsx","service/playlistService.ts","service/index.js","service/serviceConfig.js","pages/index/components/playlistList/index.js","pages/index/components/playlistList/playlistList.tsx","components/Loading/index.js","components/Loading/loading.tsx","pages/index/components/TopSongs/index.js","pages/index/components/TopSongs/top-songs.tsx","service/songService.ts","pages/index/default/index.tsx","utils/util.ts","components/SongList/index.js","components/SongList/song-list.tsx","pages/index/TopSongList/index.js","pages/index/TopSongList/top-song-list.tsx","store/state.ts","store/index.ts","pages/index/Search/components/HotSearch/index.js","pages/index/Search/components/HotSearch/hot-search.tsx","pages/index/Search/components/SearchHistory/index.js","pages/index/Search/components/SearchHistory/search-history.tsx","pages/index/Search/components/SearchSuggest/index.js","pages/index/Search/components/SearchSuggest/search-suggest.tsx","pages/index/Search/components/SearchResult/index.js","pages/index/Search/components/SearchResult/search-result.tsx","pages/index/Search/components/SearchInput/index.js","pages/index/Search/components/SearchInput/search-input.tsx","pages/index/Search/index.js","pages/index/Search/search.tsx","service/commonService.ts","components/Comment/comment.tsx","components/Comment/index.js","pages/song/components/Bottom/index.js","pages/song/components/Bottom/bottom.tsx","pages/song/components/Player/index.js","pages/song/components/Player/player.tsx","pages/song/components/LinkedPlaylist/linked-playlist.tsx","pages/song/index.js","pages/song/song.tsx","pages/playlist/index.js","pages/playlist/playlist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","tab","style","top","this","props","react_router_dom","to","exact","React","Component","IndexCommon","components_SiteHeader","components_IndexTab","children","footLogo","title","name","getPlaylistDetail","id","arguments","length","undefined","axios","get","params","then","res","data","defaults","baseURL","withCredentials","list","PlaylistList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","playlists","initData","_this2","setState","result","slice","_this3","listItems","map","playlist","renderItem","components_SectionTitle","key","picUrl","loading","topSongs","TopSongs","songs","songItems","item","renderSong","components_Loading","song","alias","join","no","joinNames","artists","album","reduce","cur","indexDefault","components_playlistList","components_TopSongs","components_SiteBottom","formatNumber","n","String","formatDate","d","formatStr","Number","isNaN","Date","now","time","replace","s","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","songList","trackItems","tracks","index","renderTrack","track","i","ar","al","TopSongList","showNumber","count","updateTime","components_SongList","href","onClick","showAllTracks","storedHistory","JSON","parse","localStorage","getItem","historyStore","createStore","history","historys","initState","action","type","payload","concat","toConsumableArray","filter","setItem","stringify","hot","items","first","handleClick","handleDelete","suggest","suggests","keyword","renderWithKeyword","mvid","tem","__html","split","dangerouslySetInnerHTML","input","method","onSubmit","submit","bind","autoComplete","value","onChange","handleChange","onFocus","handleFocus","handleClearInput","e","currentTarget","blur","preventDefault","handleSubmit","target","handleInput","search","Search","hotSearch","searchSuggests","searchHistory","getState","searched","fetchHotSearch","components_SearchInput","inputFocus","components_HotSearch","handleHotSearchItemClick","components_SearchHistory","handleHistoryClick","deleteHistory","components_SearchSuggest","handleSuggestClick","components_SearchResult","searchForKeyword","addHistory","keywords","getSongSearchResult","dispatch","fetchSearchSuggest","hots","_this4","getSearchSuggest","allMatch","_this5","subscribe","Comment","hotComments","comments","commentCount","hotCommentItems","renderComment","commentItems","inPlayer","cmt","commentId","user","avatarUrl","nickname","likedCount","thumb","content","beReplied","getComments","total","fetchComments","defaultProps","comment","bottom","player","Player","discRotateDeg","playing","audio","timer","lyrics","lyricIndex","lyricItems","renderLyric","ref","ele","togglePlayStatus","transform","img","artist","hidePlayer","height","offsetHeight","scrollOff","lyric","timeTxt","txt","formatMillsec","strs","play","pause","currentTime","_this$state","ended","clearTimeout","deg","window","setTimeout","rotateDisc","_this$state2","Audio","_this6","url","initLyric","LinkedPlaylist","coverImgUrl","playCount","toFixed","creator","Song","scrollElement","document","body","scrollTop","documentElement","backgroundImage","pic","components_Player","scrollOffPlayer","LinkedPlaylist_linked_playlist","components_Comment","components_Bottom","padding","match","ids","getSongDetail","animateScroll","duration","interval","originScrollTop","Math","round","distance","timerId","setInterval","clearInterval","Playlist","descriptionFolded","backgroundUrl","count2str","tags","description","toggleFold","react_router","path","component","pages_index","Default","onbeforeunload","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3144cfbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee6c6505.svg\";","module.exports = __webpack_public_path__ + \"static/media/foot-logo.dab1a15c.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb.523c0ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.507e0e56.svg\";","import App from './site-header'\r\nexport default App","import React from 'react';\r\nimport './site-header.scss';\r\nimport logo from './logo.svg';\r\n\r\nconst SiteHeader: React.FC = () => {\r\n    return (\r\n        <header className=\"site-header\">\r\n            <div className=\"header-wrapper clearfix\">\r\n                <h1 className=\"logo\">\r\n                    <span className=\"site-name\">网易云音乐</span>\r\n                    <img src={logo} alt=\"logo\" className=\"logo-img\"/>\r\n                </h1>\r\n                <div className=\"btn-wrapper\">\r\n                    <button className=\"btn\">下载APP</button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default SiteHeader","import tab from './index-tab'\r\nexport default tab","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './index-tab.scss'\r\n\r\ninterface Props{\r\n    top:number,\r\n    [propName:string]:any\r\n}\r\nclass IndexTab extends React.Component<Partial<Props>>{\r\n    render(){\r\n        return (\r\n            <div className=\"index-tab\" style={{top:this.props.top}}>\r\n                <ul className=\"tab-list clearfix\">\r\n                    <li className=\"tab-item\">\r\n                        <NavLink to=\"/\" exact className=\"tab-link\">推荐音乐</NavLink>\r\n                    </li>\r\n                    <li className=\"tab-item\">\r\n                        <NavLink to=\"/toplist\" className=\"tab-link\">热歌榜</NavLink>\r\n                    </li>\r\n                    <li className=\"tab-item\">\r\n                        <NavLink to=\"/search\" className=\"tab-link\">搜索</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexTab","import React from 'react'\r\nimport SiteHeader from 'components/SiteHeader'\r\nimport IndexTab from 'components/IndexTab'\r\n\r\nclass IndexCommon extends React.Component<object,object>{\r\n    render():JSX.Element{\r\n        return (\r\n            <div>\r\n                <SiteHeader />\r\n                <IndexTab />\r\n                { this.props.children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexCommon","import App from './site-bottom';\r\nexport default App;","import React from 'react'\r\nimport footLogo from './foot-logo.svg'\r\nimport './site-bottom.scss'\r\n\r\nconst SiteBottom:React.FC = ()=>{\r\n    return (\r\n        <footer className=\"site-footer\">\r\n            <div className=\"logo\">\r\n                <img src={footLogo} alt=\"foot-logo\" className=\"logo-img\"/>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"btn\">打开APP，发现更多好音乐 ></button>\r\n            </div>\r\n            <div className=\"copyright\">\r\n                <span>基于React typescript的个人实践项目 @Quino</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default SiteBottom","import title from './section-title'\r\nexport default title","import React from 'react'\r\nimport './section-title.scss'\r\n\r\ninterface Props{\r\n    name:string\r\n}\r\n\r\nclass SectionTitle extends React.Component<Props>{\r\n    render():JSX.Element{\r\n        return (\r\n            <h3 className=\"section-title\">\r\n                <span className=\"txt\">{this.props.name}</span>\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nexport default SectionTitle","import axios from 'axios'\r\nimport { Playlist,ArrResult,PlaylistDetailResult } from '../types'\r\nconst getRecommendPlaylist = ():Promise<ArrResult<Playlist>>=>{\r\n    return axios.get('/personalized').then(res=>{\r\n        return res.data;\r\n    });\r\n}\r\n\r\nconst getPlaylistDetail = (id:number = 1):Promise<PlaylistDetailResult> =>{\r\n    return axios.get('/playlist/detail',{\r\n        params:{\r\n            id:id\r\n        }\r\n    }).then(res=>res.data);\r\n}\r\nexport {\r\n    getRecommendPlaylist,\r\n    getPlaylistDetail\r\n}","import axios from 'axios'\r\nimport { baseUrl } from './serviceConfig'\r\n\r\naxios.defaults.baseURL = baseUrl;\r\naxios.defaults.withCredentials = true;\r\n\r\nexport * from './playlistService'\r\nexport * from './songService'\r\nexport * from './commonService'","const baseUrl = 'http://www.liqun91.top:8888';\r\n\r\nexport {\r\n    baseUrl\r\n}","import list from './playlistList'\r\nexport default list","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SectionTitle from 'components/SectionTitle'\r\n\r\nimport './playlistList.scss'\r\nimport { getRecommendPlaylist } from 'service'\r\nimport { Playlist } from 'types'\r\ninterface State{\r\n    playlists:Array<Playlist>\r\n}\r\nclass PlaylistList extends React.Component<object,State>{\r\n    constructor(props:object){\r\n        super(props);\r\n        this.state = {\r\n            playlists:[]\r\n        }\r\n        this.initData();\r\n    }\r\n    initData():void{\r\n        getRecommendPlaylist().then(res=>{\r\n            this.setState({\r\n                playlists:res.result.slice(0,9)\r\n            });\r\n        });\r\n    }\r\n    render():JSX.Element{\r\n        const listItems:JSX.Element[] = this.state.playlists.map(playlist=>{\r\n            return this.renderItem(playlist);\r\n        })\r\n        return(\r\n            <div className=\"j-playlist\">\r\n                <SectionTitle name=\"推荐歌单\"/>\r\n                <ul className=\"playlist-list clearfix\">\r\n                    { listItems }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    renderItem(playlist:Playlist):JSX.Element{\r\n        return (\r\n            <div className=\"playlist-item\" key={playlist.id}>\r\n                <Link to={'/playlist/' + playlist.id } className=\"playlist-link\">\r\n                    <div className=\"img img-wrapper\">\r\n                        <img \r\n                            src={playlist.picUrl}\r\n                            alt=\"playlist picture\"/>\r\n                    </div>\r\n                    <p \r\n                        className=\"name f-thide-2\">\r\n                        {playlist.name}\r\n                    </p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaylistList","import loading from './loading'\r\nexport default loading","import React from 'react'\r\nimport './loading.scss'\r\n\r\nconst Loading:React.FC = () =>{\r\n    return (\r\n        <div className=\"j-loading\">\r\n            <div className=\"loading-content clearfix\">\r\n                <div className=\"loading-item loading-item-1\"></div>\r\n                <div className=\"loading-item loading-item-2\"></div>\r\n                <div className=\"loading-item loading-item-3\"></div>\r\n                <div className=\"loading-item loading-item-4\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import topSongs from './top-songs'\r\nexport default topSongs","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from 'components/Loading'\r\nimport SectionTitle from 'components/SectionTitle'\r\nimport { getTopSongList } from 'service'\r\nimport { SongWrap } from 'types'\r\n\r\nimport './top-songs.scss'\r\n\r\ninterface State{\r\n    songs:Array<SongWrap>\r\n}\r\nclass TopSongs extends React.Component<object,State>{\r\n    constructor(props:object){\r\n        super(props);\r\n        this.state = {\r\n            songs:[]\r\n        }\r\n        this.initData();\r\n    }\r\n    initData():void{\r\n        getTopSongList().then(res=>{\r\n            this.setState({\r\n                songs:res.result\r\n            })\r\n        })\r\n    }\r\n    render():JSX.Element{\r\n        const songItems = this.state.songs.map(item=>{\r\n            return this.renderSong(item);\r\n        })\r\n        return (\r\n            <div className=\"top-songs\">\r\n                <SectionTitle name=\"最新音乐\" />\r\n                {\r\n                    this.state.songs.length ? \r\n                    <ul className=\"song-list\">\r\n                        { songItems }\r\n                    </ul> :\r\n                    <Loading/>\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    renderSong(song:SongWrap):JSX.Element{\r\n        return (\r\n            <li className=\"song-item\" key={song.id}>\r\n                <Link to={'/song/' + song.id } className=\"song-link\">\r\n                    <div className=\"info\">\r\n                        <p className=\"name f-thide\">\r\n                            <span className=\"em\">{ song.name }</span>\r\n                            <span>{ (song.song.alias.length ? '（' + song.song.alias.join(' ') + '）':'') }</span>\r\n                        </p>\r\n                        <p className=\"ar f-thide\">\r\n                            { song.song.no === 1 && <span className=\"icon\"></span> }\r\n                            <span>{this.joinNames(song.song.artists) + '- ' + song.song.album.name}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"play-btn\">\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    joinNames(list:Array<{name:string}>):string{\r\n        return list.reduce((res,cur)=>{\r\n            return res += cur.name + ' ';\r\n        },'');\r\n    }\r\n}\r\n\r\nexport default TopSongs","import axios from 'axios'\r\nimport { ArrResult,SongWrap,SongDetail } from '../types'\r\n\r\nconst getTopSongList = ():Promise<ArrResult<SongWrap>>=>{\r\n    return axios.get('/personalized/newsong').then(res=>{\r\n        return res.data;\r\n    });\r\n}\r\n\r\nconst getSongDetail = (id:string|number):Promise<SongDetail>=>{\r\n    return axios.get('/song/detail',{\r\n        params:{\r\n            ids:id\r\n        }\r\n    }).then(res=>res.data.songs[0])\r\n}\r\n\r\nconst getSongPlayingSrc = (id:number|string):Promise<string> =>{\r\n    return axios.get('/song/url',{\r\n        params:{\r\n            id\r\n        }\r\n    }).then(res=>res.data.data[0].url);\r\n}\r\nexport {\r\n    getTopSongList,\r\n    getSongDetail,\r\n    getSongPlayingSrc\r\n}","import React from 'react'\r\nimport SiteBottom from 'components/SiteBottom'\r\nimport PlaylistList from '../components/playlistList'\r\nimport TopSongs from '../components/TopSongs'\r\n\r\nclass indexDefault extends React.Component<object,object>{\r\n    render():JSX.Element{\r\n        return (\r\n            <div>\r\n                <PlaylistList />\r\n                <TopSongs />\r\n                <SiteBottom />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default indexDefault","function formatNumber(n:number):string{\r\n    return n > 9 ? String(n) : '0' + String(n);\r\n}\r\n\r\nfunction formatDate(d:number|Date,formatStr:string='YYYY年MM月DD日 hh:mm:ss'):string{\r\n    let n:number = Number(d);\r\n    if(Number.isNaN(n)){\r\n        n = Date.now();\r\n    }\r\n    let time = new Date(n);\r\n    return formatStr.replace(/Y+|M+|D+|h+|m+|s+/g,function(s:string){\r\n        switch(s[0]){\r\n            case 'Y':\r\n                if(s.length === 2){\r\n                    return String(time.getFullYear()).slice(2);\r\n                }\r\n                return String(time.getFullYear());\r\n            case 'M':\r\n                return formatNumber(time.getMonth() + 1);\r\n            case 'D':\r\n                return formatNumber(time.getDate());\r\n            case 'h':\r\n                return formatNumber(time.getHours());\r\n            case 'm':\r\n                return formatNumber(time.getMinutes());\r\n            case 's':\r\n                return formatNumber(time.getSeconds());\r\n            default:\r\n                return '';\r\n        }\r\n    })\r\n}\r\n\r\nfunction formatCount(n:number):string{\r\n    if(n >= 100000000){\r\n        return (n/100000000).toFixed(1) + '亿';\r\n    }else if(n >= 10000){\r\n        return (n/10000).toFixed(0) + '万';\r\n    }else{\r\n        return String(n);\r\n    }\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    formatNumber,\r\n    formatCount\r\n}","import songList from './song-list'\r\n\r\nexport default  songList","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Track } from 'types'\r\nimport {formatNumber } from 'utils/util'\r\n\r\nimport './song-list.scss'\r\n\r\ninterface Props{\r\n    tracks:Array<Track>\r\n}\r\n\r\nclass SongList extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        const trackItems = this.props.tracks.map((item,index)=>{\r\n            return this.renderTrack(item,index);\r\n        })\r\n        return (\r\n            <ul className=\"song-list\">\r\n                { trackItems }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    renderTrack(track:Track,i:number):JSX.Element{\r\n        return (\r\n            <li className=\"track-item\" key={track.id}>\r\n                <Link to={ '/song/' + track.id  } className=\"item-link\">\r\n                    <div className={i < 3 ? 'order top3' : 'order'}>\r\n                        { formatNumber(i + 1) }\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <p className=\"name f-thide\">\r\n                            <span className=\"em\">{ track.name }</span>                            \r\n                        </p>\r\n                        <p className=\"ar f-thide\">\r\n                            { track.no === 1 && <span className=\"icon\"></span> }\r\n                            <span>{track.ar[0].name + '- ' + track.al.name}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"play-btn\"></div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SongList","import list from './top-song-list'\r\nexport default list","import React from 'react'\r\n\r\nimport Loading from 'components/Loading'\r\nimport SongList from 'components/SongList'\r\n\r\nimport { getPlaylistDetail } from 'service'\r\nimport { formatDate } from 'utils/util'\r\nimport { PlaylistDetail,Track } from 'types'\r\n\r\nimport './top-song-list.scss'\r\n\r\ninterface State{\r\n    playlist:PlaylistDetail|null,\r\n    showNumber:number\r\n}\r\n\r\nclass TopSongList extends React.Component<object,State>{\r\n    constructor(props:object){\r\n        super(props);\r\n        this.state = {\r\n            playlist:null,\r\n            showNumber:20\r\n        }\r\n    }\r\n    initData():void{\r\n        getPlaylistDetail(1).then(res=>{\r\n            this.setState({\r\n                playlist:res.playlist\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.initData();\r\n    }\r\n    render():JSX.Element{\r\n        let tracks:Array<Track> = [];\r\n        if(this.state.playlist){\r\n            var count:number = this.state.showNumber || this.state.playlist.tracks.length;\r\n            tracks = this.state.playlist.tracks.slice(0,count);\r\n        }\r\n        return (\r\n            <div className=\"top-song-list\">\r\n                {\r\n                    !this.state.playlist && \r\n                    <div className=\"loading-wrapper\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.playlist &&\r\n                    <div>\r\n                        <div className=\"banner-wrapper\">\r\n                            <div className=\"banner\">\r\n                                <div className=\"banner-icon\"></div>\r\n                                <div className=\"time\">\r\n                                    更新时间：{formatDate(this.state.playlist.updateTime,'MM月DD日')}\r\n                                </div>\r\n                            </div>                        \r\n                        </div>\r\n                        <SongList tracks={tracks} />\r\n                        {\r\n                            !!this.state.showNumber &&\r\n                            <div className=\"show-all\">\r\n                                <a href=\"javascript:void(0)\" onClick={()=>this.showAllTracks()}>显示完整榜单 ></a>\r\n                            </div>\r\n                        }\r\n                    </div>                    \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    showAllTracks():void{\r\n        this.setState({\r\n            showNumber:0\r\n        });\r\n    }\r\n}\r\n\r\nexport default TopSongList","let storedHistory:string[] = JSON.parse(localStorage.getItem('search-history')|| '[]');\r\n\r\nexport default storedHistory;","import { createStore, AnyAction } from 'redux';\r\nimport initState from './state';\r\n\r\n// this is a reducer,a function like  (state,action)=>state\r\nfunction SearchHistory(historys:string[] = initState,action:AnyAction):string[]{\r\n    let history:string;\r\n    switch(action.type){\r\n        case 'ADD_HISTORY':\r\n            history = action.payload;\r\n            return [history,...historys.filter(item=>item !== history)];\r\n        case 'REMOVE_HISTORY':\r\n            history = action.payload;\r\n            return historys.filter(item => item!==history);\r\n        case 'CLEAR_HISTORY':\r\n            return [];\r\n        case \"SAVE_HISTORY\":\r\n            localStorage.setItem('search-history',JSON.stringify(historys));        \r\n        default:\r\n            return historys;\r\n    }\r\n}\r\n\r\nlet historyStore = createStore(SearchHistory);\r\n\r\n\r\nexport {\r\n    historyStore\r\n}","import hot from './hot-search'\r\nexport default hot","import React from 'react'\r\nimport { HotSearchItem } from 'types'\r\n\r\nimport './hot-search.scss'\r\ninterface Props{\r\n    list:Array<HotSearchItem>,\r\n    handleClick:(index:number)=>void\r\n}\r\nclass HotSearch extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        const items = this.props.list.map((item,index)=>{\r\n            return this.renderItem(item.first,index);\r\n        });\r\n        return (\r\n            <div className=\"hot-search\">\r\n                <div className=\"title\">\r\n                    热门搜索\r\n                </div>\r\n                <ul className=\"hot-search-list\">\r\n                    { items }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    renderItem(key:string,index:number):JSX.Element{\r\n        return (\r\n            <li \r\n                className=\"hot-search-item\" \r\n                key={key} \r\n                onClick={()=>{this.props.handleClick(index)}}>\r\n                { key }\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HotSearch","import history from './search-history'\r\nexport default history","import React from 'react'\r\nimport './search-history.scss'\r\n\r\ninterface Props{\r\n    history:string[],\r\n    handleClick:(index:number)=>void,\r\n    handleDelete:(index:number)=>void\r\n}\r\nclass SearchHistory extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        const items = this.props.history.map((key,index)=>{\r\n            return this.renderItem(key,index);\r\n        });\r\n        return (\r\n            <ul className=\"search-history-list\">\r\n                { items }\r\n            </ul>\r\n        )\r\n    }\r\n    renderItem(key:string,index:number):JSX.Element{\r\n        return (\r\n            <li className=\"history-item\" key={key}>\r\n                <div className=\"icon-clock\"></div>\r\n                <div className=\"content\">\r\n                    <span\r\n                        className=\"txt\"\r\n                        onClick={()=>{this.props.handleClick(index)}}>{ key }</span>\r\n                    <div \r\n                        onClick={()=>{this.props.handleDelete(index)}}\r\n                        className=\"close\">\r\n                        <span className=\"close-icon\"></span>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchHistory","import suggest from './search-suggest'\r\nexport default suggest","import React from 'react'\r\nimport { SearchSuggestItem } from 'types'\r\nimport './search-suggest.scss'\r\n\r\ninterface Props{\r\n    suggests:Array<SearchSuggestItem>,\r\n    keyword:string,\r\n    handleClick:(keyword:string)=>void\r\n}\r\nclass SearchSuggest extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        const items = this.props.suggests.map(item=>{\r\n            return this.renderItem(item.keyword);\r\n        });\r\n        return (\r\n            <div className=\"search-suggest\">\r\n                <div \r\n                    className=\"key\"\r\n                    onClick={ ()=>{this.props.handleClick(this.props.keyword)} }>\r\n                    搜索 “{ this.props.keyword }”\r\n                </div>\r\n                <ul className=\"suggest-list\">\r\n                    { items }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    renderItem(keyword:string):JSX.Element{\r\n        return (\r\n            <li \r\n                className=\"suggest-item\" \r\n                key={ keyword }\r\n                onClick={ ()=>{this.props.handleClick(keyword)} }>\r\n                <div className=\"search-icon\"></div>\r\n                <div className=\"txt\">{ keyword }</div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchSuggest","import result from './search-result'\r\nexport default result","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SearchSongItem } from 'types'\r\n\r\nimport './search-result.scss'\r\n\r\ninterface Props{\r\n    songs:Array<SearchSongItem>,\r\n    keyword:string\r\n}\r\n\r\nclass SearchResult extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        const songItems:Array<JSX.Element> = this.props.songs.map(item=>{\r\n            return this.renderSong(item);\r\n        })\r\n        return (\r\n            <div className=\"search-result\">\r\n                <ul className=\"song-list\">\r\n                    { songItems }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSong(song:SearchSongItem):JSX.Element{\r\n        return (\r\n            <li className=\"song-item\" key={song.id}>\r\n                <Link\r\n                    className=\"song-link\"\r\n                    to={'song/' + song.id}>\r\n                    <div className=\"info\">\r\n                        <p className=\"name f-thide\">\r\n                            { this.renderWithKeyword(song.name) }\r\n                        </p>\r\n                        <p className=\"ar f-thide\">\r\n                        { song.mvid !== null && <span className=\"icon\"></span> }\r\n                            <span>\r\n                                {this.renderWithKeyword(this.joinNames(song.artists))}\r\n                                <span> - </span>\r\n                                {this.renderWithKeyword(song.album.name)}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"play-btn\"></div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    renderWithKeyword(s:string):JSX.Element{\r\n        let keyword:string = this.props.keyword;\r\n        let parts:string[] = s.split(keyword);\r\n        const tem:{__html:string} = {__html:parts.join(`<em class=\"em-key\">${keyword}</em>`)};\r\n        return(\r\n            <span dangerouslySetInnerHTML={tem}>\r\n            </span>\r\n        )\r\n    }\r\n    joinNames(list:Array<{name:string}>):string{\r\n        return list.reduce((res,cur)=>{\r\n            return res += cur.name + ' ';\r\n        },'');\r\n    }\r\n}\r\n\r\nexport default SearchResult","import input from './search-input'\r\nexport default input","import React from 'react'\r\nimport './search-input.scss'\r\n\r\ninterface Props{\r\n    handleInput:(keyword:string)=>void,\r\n    handleSubmit:()=>void,\r\n    handleFocus:()=>void,\r\n    handleClearInput:()=>void,\r\n    value:string\r\n}\r\n\r\nclass SearchInput extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n        return (\r\n            <div className=\"search-input\">\r\n                <form action=\"#\" method=\"get\" className=\"search-form\" onSubmit={this.submit.bind(this)}>\r\n                    <div className=\"form-content\">\r\n                        <div className=\"search-icon\"></div>\r\n                        <div className=\"input-wrap\">\r\n                            <input \r\n                                type=\"search\" \r\n                                name=\"input\"\r\n                                className=\"input\" \r\n                                autoComplete=\"off\"\r\n                                value={ this.props.value }\r\n                                onChange={this.handleChange.bind(this)}\r\n                                onFocus={this.props.handleFocus}/>\r\n                        </div>\r\n                        {   \r\n                            !!this.props.value &&\r\n                            <div className=\"close\" onClick={this.props.handleClearInput}>\r\n                                <i className=\"close-icon\"></i>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    submit(e:React.FormEvent<HTMLFormElement>):void{\r\n        e.currentTarget.input.blur();\r\n        e.preventDefault();\r\n        this.props.handleSubmit();\r\n    }\r\n    handleChange(e:React.ChangeEvent<HTMLInputElement>):void{\r\n        let value:string = e.target.value;\r\n        this.props.handleInput(value);\r\n    }\r\n}\r\n\r\nexport default SearchInput","import search from './search'\r\nexport default search","import React from 'react'\r\nimport { historyStore } from 'store'\r\nimport {\r\n    SearchSongItem,\r\n    SearchSuggestItem,\r\n    HotSearchItem\r\n} from 'types'\r\nimport {\r\n    getHotSearch,\r\n    getSearchSuggest,\r\n    getSongSearchResult\r\n} from 'service'\r\nimport Loading from 'components/Loading'\r\nimport HotSearch from './components/HotSearch'\r\nimport SearchHistory from './components/SearchHistory'\r\nimport SearchSuggest from './components/SearchSuggest'\r\nimport SearchResult from './components/SearchResult'\r\nimport SearchInput from './components/SearchInput'\r\n\r\ninterface State{\r\n    hotSearch:Array<HotSearchItem>,\r\n    searchSuggests:Array<SearchSuggestItem>,\r\n    songs:Array<SearchSongItem>,\r\n    searchHistory:string[],\r\n    keyword:string,\r\n    searched:boolean\r\n}\r\n\r\nclass Search extends React.Component<object,State>{\r\n    constructor(props:object){\r\n        super(props);\r\n        this.state = {\r\n            hotSearch:[],\r\n            searchSuggests:[],\r\n            songs:[],\r\n            searchHistory:historyStore.getState(),\r\n            keyword:'',\r\n            searched:false\r\n        }\r\n        this.fetchHotSearch();\r\n    }\r\n    render():JSX.Element{\r\n        return (\r\n            <div>\r\n                <SearchInput\r\n                    value={this.state.keyword}\r\n                    handleInput={this.handleInput.bind(this)}\r\n                    handleClearInput={this.handleClearInput.bind(this)}\r\n                    handleSubmit={this.handleSubmit.bind(this)}\r\n                    handleFocus={this.inputFocus.bind(this)}/>\r\n                { \r\n                    !this.state.keyword &&\r\n                    <HotSearch \r\n                        list={ this.state.hotSearch }\r\n                        handleClick={ this.handleHotSearchItemClick.bind(this) } />\r\n                }\r\n                {\r\n                    !this.state.keyword &&\r\n                    <SearchHistory \r\n                        history={ this.state.searchHistory }\r\n                        handleClick={ this.handleHistoryClick.bind(this) }\r\n                        handleDelete={ this.deleteHistory.bind(this) }/>\r\n                }\r\n                {\r\n                    this.state.keyword && !this.state.searched && !!this.state.searchSuggests.length &&                    \r\n                    <SearchSuggest \r\n                        suggests={ this.state.searchSuggests }\r\n                        keyword={ this.state.keyword }\r\n                        handleClick={ this.handleSuggestClick.bind(this) }\r\n                        />\r\n                }\r\n                {\r\n                    this.state.keyword && !this.state.searched && !this.state.searchSuggests.length &&                    \r\n                    <Loading />\r\n                }\r\n                {\r\n                    this.state.searched && !!this.state.songs.length &&\r\n                    <SearchResult\r\n                        songs={ this.state.songs }\r\n                        keyword={ this.state.keyword }/>\r\n                }\r\n                {\r\n                    this.state.searched && !this.state.songs.length &&\r\n                    <Loading />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    handleSuggestClick(keyword:string):void{\r\n        this.searchForKeyword(keyword);\r\n    }\r\n    handleHotSearchItemClick(index:number):void{\r\n        this.searchForKeyword(this.state.hotSearch[index].first);\r\n    }\r\n    handleHistoryClick(index:number):void{\r\n        this.searchForKeyword(this.state.searchHistory[index]);\r\n    }\r\n    searchForKeyword(keyword:string):void{\r\n        this.setState({\r\n            searched:true\r\n        })\r\n        this.setState({\r\n            keyword\r\n        })\r\n        this.addHistory(keyword);\r\n        getSongSearchResult(keyword).then(res=>{\r\n            this.setState({\r\n                songs:res.result.songs || []\r\n            });            \r\n        })\r\n    }\r\n    deleteHistory(index:number):void{\r\n        var history:string = this.state.searchHistory[index];\r\n        historyStore.dispatch({\r\n            type:'REMOVE_HISTORY',\r\n            payload:history\r\n        });\r\n    }\r\n    inputFocus():void{\r\n        if(this.state.keyword){\r\n            this.setState({\r\n                songs:[],\r\n                searchSuggests:[],\r\n                searched:false\r\n            })\r\n            this.fetchSearchSuggest(this.state.keyword);\r\n        }\r\n    }\r\n    handleInput(keyword:string):void{\r\n        this.setState({\r\n            keyword:keyword,\r\n            searchSuggests:[]\r\n        });\r\n        if(keyword){\r\n            this.fetchSearchSuggest(keyword);\r\n        }\r\n    }\r\n    handleClearInput():void{\r\n        this.setState({\r\n            keyword:'',\r\n            searched:false,\r\n            songs:[],\r\n            searchSuggests:[]\r\n        })\r\n    }\r\n    handleSubmit():void{\r\n        let keyword:string = this.state.keyword;\r\n        this.setState({\r\n            searched:false,\r\n            songs:[]\r\n        });\r\n        if(keyword){\r\n            this.searchForKeyword(keyword);\r\n        }\r\n    }\r\n    addHistory(keyword:string){\r\n        historyStore.dispatch({\r\n            type:'ADD_HISTORY',\r\n            payload:keyword\r\n        })\r\n    }\r\n    fetchHotSearch():void{\r\n        getHotSearch().then(res=>{\r\n            this.setState({\r\n                hotSearch:res.result.hots\r\n            })\r\n        })\r\n    }\r\n    fetchSearchSuggest(keyword:string):void{\r\n        if(!keyword){\r\n            return;\r\n        }\r\n        getSearchSuggest(keyword).then(res=>{\r\n            if(res.result.allMatch){\r\n                this.setState({\r\n                    searchSuggests:res.result.allMatch\r\n                });\r\n            }\r\n        })\r\n    }\r\n    componentDidMount():void{\r\n        historyStore.subscribe(()=>{\r\n            this.setState({\r\n                searchHistory:historyStore.getState()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Search","import axios from 'axios'\r\nimport { HotSearchResult,SearchSuggestResult,SearchSongResult,CommentResult } from 'types'\r\n\r\nconst getHotSearch = ():Promise<HotSearchResult> =>{\r\n    return axios.get('/search/hot').then(res=>res.data);\r\n}\r\n\r\nconst getSearchSuggest = (keyword:string,type:string='mobile'):Promise<SearchSuggestResult> =>{\r\n    return axios.get('/search/suggest',{\r\n        params:{\r\n            keywords:keyword,\r\n            type\r\n        }\r\n    }).then(res=>res.data);\r\n}\r\n\r\nconst getSongSearchResult = (keyword:string,type:number = 1):Promise<SearchSongResult> =>{\r\n    return axios.get('/search',{\r\n        params:{\r\n            keywords:keyword,\r\n            type\r\n        }\r\n    }).then(res=>res.data);\r\n}\r\n\r\nconst getComments = (id:number,type:string = 'song'):Promise<CommentResult>=>{\r\n    return axios.get('/comment/' + type,{\r\n        params:{\r\n            id\r\n        }\r\n    }).then(res=>res.data);\r\n}\r\nexport {\r\n    getHotSearch,\r\n    getSearchSuggest,\r\n    getSongSearchResult,\r\n    getComments\r\n}","import React from 'react'\r\n\r\nimport { getComments } from 'service'\r\nimport {formatDate} from 'utils/util'\r\nimport { comment } from 'types'\r\n\r\nimport './comment.scss'\r\nimport thumb from './thumb.svg'\r\n\r\ninterface Props{\r\n    id:number,\r\n    type:string,\r\n    inPlayer:boolean\r\n}\r\ninterface State{\r\n    hotComments:Array<comment> | null,\r\n    comments:Array<comment> | null,\r\n    commentCount:number\r\n}\r\n\r\nclass Comment extends React.Component<Props,State>{\r\n    static defaultProps = {\r\n        inPlayer:false\r\n    }\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.state = {\r\n            hotComments:null,\r\n            comments:null,\r\n            commentCount:0\r\n        }\r\n    }\r\n    render():JSX.Element{\r\n        if(!this.state.hotComments || !this.state.comments){\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n        const hotCommentItems = this.state.hotComments.map(item=>{\r\n            return this.renderComment(item);\r\n        });\r\n        const commentItems = this.state.comments.map(item=>{\r\n            return this.renderComment(item);\r\n        });\r\n        return (\r\n            <div className={ this.props.inPlayer ? 'm-comment in-player' : 'm-comment' }>\r\n                {\r\n                    !!this.state.hotComments.length &&\r\n                    <div className=\"hot\">\r\n                        <div className=\"line-title\">精彩评论</div>\r\n                        <ul className=\"comment-list\">\r\n                            { hotCommentItems }\r\n                        </ul>\r\n                    </div>\r\n                }\r\n                <div className=\"normal\">\r\n                    <div className=\"line-title\">最新评论({this.state.commentCount})</div>\r\n                    <ul className=\"comment-list\">\r\n                        { commentItems }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    renderComment(cmt:comment):JSX.Element{\r\n        return(\r\n            <li className=\"comment-item\" key={cmt.commentId}>\r\n                <div className=\"avatar\">\r\n                    <img src={cmt.user.avatarUrl} alt=\"\"/>\r\n                </div>\r\n                <div className=\"cnt\">\r\n                    <div className=\"top\">\r\n                        <div className=\"user\">\r\n                            <div className=\"name f-thide\">{cmt.user.nickname}</div>\r\n                            <div className=\"time\">{formatDate(cmt.time,'Y年M月D日')}</div>\r\n                        </div>\r\n                        <div className=\"like-info\">\r\n                            <span className=\"num\">{cmt.likedCount ? cmt.likedCount : ''}</span>\r\n                            <img src={thumb} className=\"thumb\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"txt\">{cmt.content}</div>\r\n                        {\r\n                            !!cmt.beReplied.length && \r\n                            <div className=\"reply\">\r\n                                @{cmt.beReplied[0].user.nickname}:{cmt.beReplied[0].content}\r\n                            </div>\r\n                        }\r\n                    </div>                    \r\n                </div>\r\n                \r\n            </li>\r\n        )\r\n    }\r\n    fetchComments():void{\r\n        getComments(this.props.id,this.props.type).then(res=>{\r\n            this.setState({\r\n                hotComments:res.hotComments,\r\n                comments:res.comments,\r\n                commentCount:res.total\r\n            });\r\n        })\r\n    }\r\n    componentDidMount():void{\r\n        this.fetchComments();\r\n    }\r\n}\r\n\r\nexport default Comment","import comment from './comment'\r\n\r\nexport default comment","import bottom from './bottom'\r\n\r\nexport default bottom","import React from 'react'\r\n\r\nimport './bottom.scss'\r\n\r\nclass Bottom extends React.Component<object,object>{\r\n    render():JSX.Element{\r\n        return (\r\n            <div className=\"song-detail-bottom\">\r\n                <div className=\"btn btn-open\">打 开</div>\r\n                <div className=\"btn btn-dld\">下 载</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bottom","import player from './player'\r\n\r\nexport default player","import React from 'react'\r\n\r\nimport { getSongPlayingSrc } from 'service' \r\nimport './player.scss'\r\nimport logo from './logo.svg'\r\nimport lyric from './lyric.json'\r\n\r\ninterface Props{\r\n    id:number,\r\n    img:string,\r\n    name:string,\r\n    artist:string,\r\n    scrollOff:(height:number)=>void\r\n}\r\ninterface lyricItem{\r\n    time:number,\r\n    txt:string\r\n}\r\ninterface State{\r\n    discRotateDeg:number,\r\n    playing:boolean,\r\n    audio:HTMLAudioElement|null,\r\n    timer:number|null,\r\n    lyrics:lyricItem[],\r\n    lyricIndex:number, // 播放位置\r\n    src:string\r\n}\r\nclass Player extends React.Component<Props,State>{\r\n    player:HTMLDivElement|null = null\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.state = {\r\n            discRotateDeg:0,\r\n            playing:false,\r\n            audio:null,\r\n            timer:null,\r\n            lyrics:[],\r\n            lyricIndex:0,\r\n            src:''\r\n        }        \r\n    }\r\n    render():JSX.Element{\r\n        const lyricItems:JSX.Element[] = this.state.lyrics.map((item,index)=>{\r\n            return this.renderLyric(item,index);\r\n        })\r\n        return(\r\n            <div className=\"player-wrapper\" ref={ele=>this.player = ele}>\r\n                <div className=\"tap-area\" onClick={this.togglePlayStatus.bind(this)}></div>\r\n                <h1 className=\"logo\">\r\n                    <img src={logo}/>\r\n                </h1>\r\n                <div className=\"album\">\r\n                    <div className=\"al\" style={{transform:'rotate(' + this.state.discRotateDeg + 'deg)'}}>\r\n                        <div className=\"img\">\r\n                            <img src={this.props.img}/>\r\n                        </div>                        \r\n                    </div>\r\n                    {\r\n                        !this.state.playing &&\r\n                        <div className=\"play-btn\"></div>\r\n                    }\r\n                </div>\r\n                <div className=\"song-info\">\r\n                    <span className=\"name\">{ this.props.name }</span>\r\n                    <span className=\"sep\">-</span>\r\n                    <span className=\"ar\">{ this.props.artist }</span>\r\n                </div>\r\n                <div className=\"lyric\">\r\n                    <div \r\n                        className=\"lyric-list\"\r\n                        style={{transform:'translateY(-'+ this.state.lyricIndex*30 + 'px)'}}>\r\n                        { lyricItems }\r\n                    </div>\r\n                </div>\r\n                <div className=\"scroll-up\">\r\n                    <p className=\"more\">因为歌词接口问题，以上歌词与歌曲无关 ></p>\r\n                    <div className=\"btn-wrapper\" onClick={this.hidePlayer.bind(this)}>\r\n                        <div className=\"btn-icon\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    hidePlayer():void{\r\n        if(this.player){\r\n            let height:number = this.player.offsetHeight;\r\n            this.props.scrollOff(height);\r\n        }        \r\n    }\r\n    initLyric():void{\r\n        var rawLyric:string = lyric.lyric;\r\n        let lyrics:lyricItem[] = rawLyric.split('[').slice(1).map(item=>{\r\n            var timeTxt:string[] = item.split(']');\r\n            return {\r\n                txt:timeTxt[1].replace('↵',' '),\r\n                time:this.formatMillsec(timeTxt[0])\r\n            }\r\n        });\r\n        this.setState({\r\n            lyrics\r\n        });\r\n    }\r\n    renderLyric(lyric:lyricItem,index:number):JSX.Element{\r\n        let lyricIndex = this.state.lyricIndex;\r\n        return (\r\n            <p className={index === lyricIndex ? 'lyric-item active':'lyric-item'}\r\n                key={ lyric.time + lyric.txt }>\r\n                { lyric.txt }\r\n            </p>\r\n        )\r\n    }\r\n    formatMillsec(s:string):number{\r\n        var strs:string[] = s.split(':');\r\n        var result:number = 0;\r\n        if(strs.length === 3){\r\n            result += Number(strs[0])*60*60;\r\n            strs = strs.slice(1);\r\n        }\r\n        result += Number(strs[0])*60;\r\n        result += Number(strs[1]);\r\n        return result;\r\n    }\r\n    togglePlayStatus(){\r\n        var status = !this.state.playing;        \r\n        if(status){\r\n            this.play();\r\n        }else{\r\n            this.pause();\r\n        }\r\n    }\r\n    rotateDisc():void{\r\n        if(this.state.audio){\r\n            let time:number = this.state.audio.currentTime;\r\n            let { lyricIndex, lyrics } = this.state;\r\n            if(lyrics.length && lyrics[lyricIndex + 1].time - time < 0.3){\r\n                this.setState({\r\n                    lyricIndex:lyricIndex + 1\r\n                })\r\n            }\r\n            if(this.state.audio.ended){\r\n                this.pause();\r\n            }\r\n        }\r\n        if(this.state.timer){\r\n            clearTimeout(this.state.timer);\r\n        }\r\n        var deg = this.state.discRotateDeg;\r\n        deg += 1;\r\n        if(deg === 360) deg = 0;\r\n        this.setState({\r\n            discRotateDeg:deg\r\n        });\r\n        if(this.state.playing){\r\n            this.setState({\r\n                timer:window.setTimeout(()=>{\r\n                    this.rotateDisc();\r\n                },60)\r\n            })\r\n        }\r\n    }\r\n    play():void{\r\n        var { src,audio } = this.state\r\n        if(!audio && src){\r\n            audio = new Audio(src);\r\n            this.setState({\r\n                audio\r\n            })\r\n        }\r\n        audio && audio.play();\r\n        this.setState({\r\n            playing:true\r\n        },()=>{\r\n            this.rotateDisc(); \r\n        });                      \r\n    }\r\n    pause(){\r\n        var audio:HTMLAudioElement|null = this.state.audio;\r\n        audio && audio.pause();\r\n        this.setState({\r\n            playing:false,\r\n            timer:null\r\n        });\r\n    }\r\n    componentDidMount():void{\r\n        getSongPlayingSrc(this.props.id).then(res=>{\r\n            this.setState({\r\n                src:res\r\n            });\r\n        });\r\n        this.initLyric();\r\n    }\r\n    componentWillUnmount():void{\r\n        var audio:HTMLAudioElement|null = this.state.audio;\r\n        audio && audio.pause();\r\n        if(this.state.timer) clearTimeout(this.state.timer);\r\n    }\r\n}\r\n\r\nexport default Player","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './linked-playlist.scss'\r\nimport { PlaylistDetail } from 'types';\r\nimport { formatCount } from 'utils/util'\r\n\r\ninterface Props{\r\n    playlists:Array<PlaylistDetail>\r\n}\r\n\r\nclass LinkedPlaylist extends React.Component<Props,object>{\r\n    render():JSX.Element{\r\n\r\n        return (\r\n            <div className=\"linked-playlist\">\r\n                <div className=\"tit\">包含这首歌的歌单</div>\r\n                <div className=\"playlist\">\r\n                    {this.props.playlists.map(item=>{\r\n                        return (\r\n                            <div className=\"playlist-item\">\r\n                                <Link \r\n                                    to={'/playlist/' + item.id}\r\n                                    className=\"item-link\">\r\n                                    <div className=\"img-wrapper\">\r\n                                        <img src={item.coverImgUrl} alt=\"\"/>\r\n                                        <div className=\"play-count\">\r\n                                            <span className=\"icon-ear\"></span>\r\n                                            <span className=\"num\">{formatCount(item.playCount)}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"name f-thide\">{item.name}</div>\r\n                                    <div className=\"ar f-thide\">by {item.creator.nickname}</div>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })}                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LinkedPlaylist","import song from './song'\r\nexport default song","import React from 'react'\r\nimport { SongDetail, PlaylistDetail } from 'types'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { getSongDetail } from 'service'\r\n\r\nimport Loading from 'components/Loading'\r\nimport Comment from 'components/Comment'\r\nimport Bottom from './components/Bottom'\r\nimport Player from './components/Player'\r\n\r\nimport './song.scss'\r\nimport LinkedPlaylist from './components/LinkedPlaylist/linked-playlist';\r\n\r\ninterface State{\r\n    song:SongDetail|null,\r\n    id:number,\r\n    playlists:Array<PlaylistDetail>\r\n}\r\n\r\nclass Song extends React.Component<RouteComponentProps<{id:string}>,State>{\r\n    scrollElement:HTMLDivElement|null = null\r\n    constructor(props:RouteComponentProps<{id:string}>){\r\n        super(props);\r\n        this.state = {\r\n            song:null,\r\n            id:0,\r\n            playlists:[]\r\n        }        \r\n    }\r\n    componentDidMount(){\r\n        this.initData();\r\n        document.body.scrollTop = 1;\r\n        document.documentElement.scrollTop = 1;\r\n    }\r\n    render():JSX.Element{\r\n        if(!this.state.song){\r\n            return (\r\n                <div style={{padding:'50px 0'}}>\r\n                    <Loading />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"song-detail\">\r\n                <div className=\"song-content\">\r\n                    <div className=\"song-bg\" style={{backgroundImage:'url(//music.163.com/api/img/blur/' + this.state.song.al.pic +')'}}></div>\r\n                    <div className=\"song-scroll\" ref={(ele)=>this.scrollElement = ele}>\r\n                        <Player \r\n                            id={this.state.id}\r\n                            img={this.state.song.al.picUrl}\r\n                            name={this.state.song.name}\r\n                            scrollOff={this.scrollOffPlayer.bind(this)}\r\n                            artist={this.state.song.ar[0].name} />\r\n                        {\r\n                            !!this.state.playlists.length &&\r\n                            <LinkedPlaylist playlists={this.state.playlists}/>\r\n                        }\r\n                        <Comment \r\n                            inPlayer={true}\r\n                            type=\"music\"\r\n                            id={this.state.id}/>\r\n                    </div>\r\n                    <div className=\"foot\">\r\n                        <Bottom />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    initData():void{\r\n        var id:number = Number(this.props.match.params.id);\r\n        this.setState({\r\n            id\r\n        });   \r\n        getSongDetail(id).then(song=>{\r\n            this.setState({\r\n                song:song\r\n            })\r\n        });\r\n        \r\n    }\r\n    // 将player滚动出屏幕\r\n    scrollOffPlayer(height:number):void{\r\n        if(this.scrollElement){\r\n            this.animateScroll(this.scrollElement,height,300);\r\n        }\r\n    }\r\n    animateScroll(ele:HTMLElement,scrollTop:number,duration:number = 500,interval:number = 15):void{\r\n        let originScrollTop:number = ele.scrollTop;\r\n        let count = Math.round(duration/interval);  //40ms 执行一次\r\n        let distance = (scrollTop - originScrollTop) / count;  //每次滚动的距离\r\n        let time = 0;\r\n        let timerId = setInterval(()=>{\r\n            time ++;\r\n            if(time === count){\r\n                ele.scrollTop = scrollTop;\r\n                clearInterval(timerId);\r\n            }else{\r\n                ele.scrollTop = originScrollTop + time * distance;\r\n            }\r\n        },interval);\r\n    }\r\n}\r\n\r\nexport default Song","import playlist from './playlist'\r\nexport default playlist","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport Loading from 'components/Loading'\r\nimport SongList from 'components/SongList'\r\nimport Comment from 'components/Comment'\r\nimport { getPlaylistDetail } from 'service'\r\n\r\nimport './playlist.scss'\r\nimport { PlaylistDetail } from 'types';\r\n\r\ninterface State{\r\n    id:number,\r\n    playlist:PlaylistDetail|null,\r\n    descriptionFolded:boolean\r\n}\r\nclass Playlist extends React.Component<RouteComponentProps<{id:string}>,State>{\r\n    constructor(props:RouteComponentProps<{id:string}>){\r\n        super(props);\r\n        this.state = {\r\n            id:0,\r\n            playlist:null,\r\n            descriptionFolded:true\r\n        }\r\n    }\r\n\r\n    render():JSX.Element{\r\n        return (\r\n            <div className=\"playlist-detail\">\r\n                {\r\n                    !this.state.playlist ? \r\n                    <div className=\"loading-wrapper\">\r\n                        <Loading />\r\n                    </div> :\r\n                    <div className=\"playlist-content\">\r\n                        <div className=\"header clearfix\">\r\n                            <div \r\n                                className=\"bg\" \r\n                                style={{backgroundImage:'url('+this.state.playlist.creator.backgroundUrl+')'}}>                            \r\n                            </div>\r\n                            <div \r\n                                className=\"img-wrapper\"\r\n                                style={{backgroundImage:'url('+this.state.playlist.coverImgUrl+')'}}>                            \r\n                                <div className=\"img\">\r\n                                    <div className=\"tag\">歌单</div>\r\n                                    <div className=\"play-count\">\r\n                                        <div className=\"icon\"></div>\r\n                                        <div className=\"count\">{ this.count2str(this.state.playlist.playCount) }</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <div className=\"name f-thide-2\">{ this.state.playlist.name }</div>\r\n                                <div className=\"creator clearfix\">\r\n                                    <div className=\"avatar\">\r\n                                        <img src={this.state.playlist.creator.avatarUrl} alt=\"\"/>\r\n                                    </div>\r\n                                    <div className=\"username f-thide\">{ this.state.playlist.creator.nickname }</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"desc\">\r\n                            {\r\n                                !!this.state.playlist.tags.length &&\r\n                                <div className=\"tags clearfix\">\r\n                                    <div className=\"label\">标签：</div>\r\n                                    { this.state.playlist.tags.map(item=>{\r\n                                        return (\r\n                                            <div className=\"tag-item\" key={item}>{item}</div>\r\n                                        )\r\n                                    }) }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                !!this.state.playlist.description &&\r\n                                <div className=\"description\">\r\n                                    <p className={this.state.descriptionFolded ? 'f-thide-3' : ''}>\r\n                                        简介：{ this.state.playlist.description }\r\n                                    </p>\r\n                                    <div className=\"fold\" onClick={this.toggleFold.bind(this)}>\r\n                                        <div className={this.state.descriptionFolded ? 'icon' : 'icon undo'}></div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"line-title\">歌曲列表</div>\r\n                        <SongList tracks={this.state.playlist.tracks.slice(0,50)}/>\r\n                        <Comment id={this.state.id} type=\"playlist\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    count2str(n:number):string{\r\n        if(n < 10000){\r\n            return String(n);\r\n        }else{\r\n            return String(n).slice(0,-4) + '万';\r\n        }\r\n    }\r\n    toggleFold():void{\r\n        this.setState({\r\n            descriptionFolded:!this.state.descriptionFolded\r\n        })\r\n    }\r\n    componentDidMount():void{\r\n        let id:number = Number(this.props.match.params.id);\r\n        getPlaylistDetail(id).then(res=>{\r\n            this.setState({\r\n                id,\r\n                playlist:res.playlist\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Playlist","import React from 'react';\r\nimport IndexCommon from 'pages/index'\r\nimport Default from 'pages/index/default'\r\nimport TopSongList from 'pages/index/TopSongList'\r\nimport Search from 'pages/index/Search'\r\nimport Song from 'pages/song'\r\nimport Playlist from 'pages/playlist'\r\n\r\nimport { historyStore } from 'store'\r\nimport { Route,Switch } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    render():JSX.Element{\r\n        return (\r\n            <Router>\r\n                <Switch>               \r\n                    <Route path=\"/song/:id\" component={Song}/> \r\n                    <Route path=\"/playlist/:id\" component={Playlist}/>\r\n                    <IndexCommon>                \r\n                        <Route path=\"/\" exact component={Default} />\r\n                        <Route path=\"/toplist\" component={TopSongList} />\r\n                        <Route path=\"/search\" component={Search} />\r\n                    </IndexCommon>                             \r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nwindow.onbeforeunload = ()=>{\r\n    historyStore.dispatch({\r\n        type:'SAVE_HISTORY'\r\n    });\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}